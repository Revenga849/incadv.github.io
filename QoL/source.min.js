var sourcecode = 'var logs = [];\n\
var _addCombatLog = addCombatLog;\n\
var addLog = function(id, text) {\n\
	_addCombatLog(id, text);\n\
	if (typeof game.options !==  "undefined" && typeof game.options[id] !==  "undefined" && game.options[id] ==  0)\n\
        return;\n\
	var logtext = game.combatLog[game.combatLog.length-1];\n\
	logs.push(logtext);\n\
	if (logs.length > 500) {\n\
		logs.shift();\n\
	}\n\
	\n\
	var divlog = document.getElementById("qol-logs");\n\
	var p = document.createElement("p");\n\
	p.setAttribute("class", "combat-log-record");\n\
	p.style.display = "block";\n\
	p.innerHTML = logtext;\n\
	divlog.append(p);\n\
	if (bLog) {\n\
		divlog.scrollTo(0, divlog.scrollHeight);\n\
	}\n\
}\n\
addCombatLog = addLog;\n\
\n\
function prestigeCustom(layer) {\n\
	addCombatLog(9, "<span style=\\"font-weight: 600; color:#FF0000;\\">QoL</span> <span style=\\"font-weight: 600;\\">Prestige Layer " + (layer + 1)  + "</span>" + " at floor " + formatValue(game.floor));\n\
	autoPrestige(layer);\n\
	checkStatUpgrades(layer, 9);\n\
	\n\
	clearPrevMults(layer);\n\
	if (layer+1 < game.prestige.length) {\n\
		prevmult[layer+1] = getMult(layer+1);\n\
	}\n\
}\n\
\n\
function checkStatUpgrades(layer = 0, logType = 9) {\n\
    if (document.getElementById("top-menu-prestige-button").classList.contains("highlight")) {\n\
        document.getElementById("top-menu-prestige-button").classList.remove("highlight");\n\
    }\n\
	for (let i = layer; i >= 0; i--) {\n\
		if (typeof game.prestige !== "undefined" && typeof game.prestige[i] !== "undefined" && checkAuto(i)) {\n\
			let upgradePoints = game.prestige[i][0].dividedBy(new Decimal(2)).floor();\n\
			if (upgradePoints.cmp(new Decimal("1e10")) > 0) \n\
				upgradePoints = upgradePoints.times(0.99).floor();\n\
			let logged = false;\n\
			for (let stat = 1; stat <= 3; stat+=2) {\n\
				let oldStats = game.prestige[i][stat];\n\
				let oldStatPoints = getPrestigePointsFromStatUpgrades(oldStats);\n\
				let newStats = getStatUpgradesFromPrestigePoints(upgradePoints.plus(oldStatPoints));\n\
				let newStatPoints = getPrestigePointsFromStatUpgrades(newStats);\n\
				\n\
				if (upgradePoints.gte(1)) {\n\
					let totalNewPoints = game.prestige[i][0].plus(oldStatPoints);\n\
					if (totalNewPoints.gte(new Decimal("ee5")) && newStatPoints.gte(new Decimal("ee5"))) {\n\
						if (game.prestige[i][0].lt_tolerance(newStatPoints, "1e-7"))\n\
							continue;\n\
							\n\
						if (oldStats.eq_tolerance(newStats, "1e-7"))\n\
							continue;\n\
\n\
						game.prestige[i][stat] = newStats;\n\
					} else {\n\
						if (newStats.lt(getMultiBuyTarget(oldStats, 0))) \n\
							continue;\n\
\n\
						if (totalNewPoints.lte(newStatPoints)) \n\
							continue;\n\
\n\
						if (newStatPoints.eq(oldStatPoints)) \n\
							continue;\n\
\n\
						game.prestige[i][0] = game.prestige[i][0].plus(oldStatPoints).minus(newStatPoints);\n\
						game.prestige[i][stat] = newStats;\n\
					}\n\
					\n\
					if (!logged) {\n\
						var ll = layer+1;\n\
						var color = 255-200*(ll-i)/(ll);\n\
						color = Number.parseInt(color.toFixed(0)).toString(16);\n\
						if (color.length == 1) {\n\
							color = "0" + color;\n\
						}\n\
						var colorcode = "#ff" + color + color;\n\
						var qol = "<span style=\\"font-weight: 600; color:" + colorcode + ";\\">QoL" + "</span>";\n\
						addCombatLog(logType, qol + " Auto-upgrade <span style=\\"font-weight: 600;\\">Prestige Layer " + (i + 1) + "</span>: (" + formatValue(oldStats.plus(1).times(new Decimal(i > 0 ? i : 1))) + "x ><span style=\\"font-weight: 600;\\"> " + formatValue(newStats.plus(1).times(new Decimal(i > 0 ? i : 1))) + "x</span>)");\n\
						logged = true;\n\
					}\n\
				}\n\
			}\n\
		}\n\
	}\n\
	if (typeof game.prestige !== "undefined") {\n\
		document.getElementById("top-menu-prestige-button").style.display = "inline-block";\n\
	}\n\
}\n\
\n\
\n\
\n\
window.addEventListener("keydown", function(event) {\n\
	if (document.activeElement.type === "text" || document.activeElement.type === "number") return false;\n\
	var tmp = event.keyCode;\n\
	if (event.keyCode >= 97 && event.keyCode <=104) {\n\
		prestigeCustom(event.keyCode-97);\n\
	}\n\
}, false);\n\
\n\
var div = document.getElementById("qol-container");\n\
if (div != null) {\n\
	div.remove();\n\
}\n\
var div2 = document.getElementById("qol-totals");\n\
if (div2 != null) {\n\
	div2.remove();\n\
}\n\
\n\
function _init() {\n\
	var style = document.createElement("style");\n\
	document.head.appendChild(style);\n\
	style.sheet.insertRule(".enemy-damage { font-size: 1vw; }");\n\
	style.sheet.insertRule(".enemy-health { font-size: 1vw; }");\n\
	style.sheet.insertRule(".hero-damage { font-size: 1vw; }");\n\
	style.sheet.insertRule(".hero-health { font-size: 1vw; }");\n\
	style.sheet.insertRule(".hero-armor { font-size: 1vw; }");\n\
	style.sheet.insertRule(".hero-healing { font-size: 1vw; }");\n\
\n\
	document.getElementById("combat-log").setAttribute("style","width: 55vw; font-size: 1.25vw;");\n\
	\n\
	var qoldiv = document.createElement("div");\n\
	qoldiv.setAttribute("id","qol-container");\n\
	qoldiv.setAttribute("style", "height: 23vw; bottom: 0; right: 0; position: fixed; text-align: right;");\n\
	var div = document.createElement("div");\n\
	div.setAttribute("id","qol-prestige");\n\
	div.setAttribute("style", "overflow:auto; height:18vw; text-align: right;");\n\
	qoldiv.append(div);\n\
\n\
	var divlog = document.createElement("div");\n\
	divlog.setAttribute("id","qol-logs");\n\
	divlog.setAttribute("style", "overflow:auto; width:60vw; height: 18vw; bottom: 0vw; right: 0; position: fixed; text-align: center; display:none;");\n\
	qoldiv.append(divlog);\n\
\n\
	var div2 = document.createElement("div");\n\
	div2.setAttribute("id","qol-totals");\n\
	div2.setAttribute("style", "bottom: 23vw; right: 0; position: fixed; text-align: right;");\n\
	var totals = document.createElement("p");\n\
	totals.setAttribute("id", "p-totals");\n\
	totals.setAttribute("class", "combat-log-record");\n\
	totals.setAttribute("style", "display: block;");\n\
	var span = document.createElement("span");\n\
	span.setAttribute("id", "l-totals");\n\
	span.innerHTML = "<b>Total stat multi</b>: ";\n\
	totals.append(span);\n\
	var span2 = document.createElement("span");\n\
	span2.setAttribute("id", "l-totals-stats");\n\
	span2.style.display = "inline-block";\n\
	span2.innerText = " ";\n\
	totals.append(span2);\n\
	div2.append(totals);\n\
	\n\
	document.getElementById("battlefield-screen").append(qoldiv);\n\
	document.getElementById("battlefield-screen").append(div2);\n\
	init = true;\n\
}\n\
\n\
var drawing = false;\n\
function redraw() {\n\
	if (drawing) return;\n\
	drawing = true;\n\
	let __init = init;\n\
	var container = document.getElementById("qol-container");\n\
	var prestiges = document.getElementById("qol-prestige");\n\
	var prestigePoints = getAvailablePrestigePoints();\n\
	\n\
	if (prestigePoints.length != prestiges.childElementCount) {\n\
		if (__init) {\n\
			container.innerHTML = null;\n\
			\n\
			var settingsFormat = document.createElement("p");\n\
			settingsFormat.setAttribute("id", "p-settingsFormat");\n\
			settingsFormat.setAttribute("class", "combat-log-record");\n\
			settingsFormat.setAttribute("style", "display: block; padding:4px;");\n\
			\n\
			var logButton = document.createElement("div");\n\
			logButton.setAttribute("id", "p-log-button");\n\
			logButton.setAttribute("class","button prestige-menu-button");\n\
			logButton.setAttribute("style", "padding-bottom: 1px;padding-top: 1px;padding-right: 10px;padding-left: 10px;margin-left: 5px;display: inline;");\n\
			logButton.innerText = "Logs";\n\
			logButton.setAttribute("onclick", "toggleLog();");\n\
			settingsFormat.append(logButton);\n\
			\n\
			var formatSetting = document.createElement("div");\n\
			formatSetting.setAttribute("id", "p-settings-format");\n\
			formatSetting.setAttribute("class","button prestige-menu-button");\n\
			formatSetting.setAttribute("style", "padding-bottom: 1px;padding-top: 1px;padding-right: 10px;padding-left: 10px;margin-left: 5px;display: inline;");\n\
			formatSetting.innerText = "Format: Default";\n\
			formatSetting.setAttribute("onclick", "toggleFormat();");\n\
			settingsFormat.append(formatSetting);\n\
			\n\
			var forceFormatSetting = document.createElement("div");\n\
			forceFormatSetting.setAttribute("id", "p-settings-force-format");\n\
			forceFormatSetting.setAttribute("class","button prestige-menu-button");\n\
			forceFormatSetting.setAttribute("style", "padding-bottom: 1px;padding-top: 1px;padding-right: 10px;padding-left: 10px;margin-left: 5px;display: inline;");\n\
			forceFormatSetting.innerText = "Force format OFF";\n\
			forceFormatSetting.setAttribute("title", "Force selected format for all in-game numbers");\n\
			forceFormatSetting.setAttribute("onclick", "toggleForceFormat();");\n\
			settingsFormat.append(forceFormatSetting);\n\
			\n\
			\n\
			var settingsCheat = document.createElement("p");\n\
			settingsCheat.setAttribute("id", "p-settingsCheat");\n\
			settingsCheat.setAttribute("class", "combat-log-record");\n\
			settingsCheat.setAttribute("style", "display: block; padding:4px;");\n\
			\n\
			var constraintButton = document.createElement("span");\n\
			constraintButton.setAttribute("id", "p-settings-constraint-button");\n\
			constraintButton.setAttribute("style", "padding-bottom: 1px;padding-top: 1px;padding-right: 10px;padding-left: 10px;margin-left: 5px;display: none;");\n\
			constraintButton.innerText = "Prestige constraint (?): ";\n\
			settingsCheat.append(constraintButton);\n\
			setConstraintText();\n\
			\n\
			var constraintInput = document.createElement("input");\n\
			constraintInput.setAttribute("id", "p-settings-constraint-input");\n\
			constraintInput.setAttribute("type", "text");\n\
			constraintInput.setAttribute("style", "display: none; width: 3vw; height:2vw;");\n\
			constraintInput.setAttribute("title", "Prestige constraint threshold");\n\
			constraintInput.value = formatValue(constraintValue*100-100) + "%";\n\
			settingsCheat.append(constraintInput);\n\
			\n\
			var ap = document.createElement("div");\n\
			ap.setAttribute("id", "p-settings-ap");\n\
			ap.setAttribute("class","button prestige-menu-button");\n\
			ap.setAttribute("style", "padding-bottom: 1px;padding-top: 1px;padding-right: 10px;padding-left: 10px;margin-left: 5px;display: none;");\n\
			ap.setAttribute("title", "Auto-prestige if multi is higher than % of current stats or flat threshold. Percentage is applied to exponents for high numbers");\n\
			ap.innerText = "Auto inputs OFF";\n\
			ap.setAttribute("onclick", "toggleAuto();");\n\
			settingsCheat.append(ap);\n\
			\n\
			var cheatingSetting = document.createElement("div");\n\
			cheatingSetting.setAttribute("id", "p-settings-cheat");\n\
			cheatingSetting.setAttribute("class","button prestige-menu-button");\n\
			cheatingSetting.setAttribute("style", "padding-bottom: 1px;padding-top: 1px;padding-right: 10px;padding-left: 10px;margin-left: 5px;display: inline;");\n\
			cheatingSetting.setAttribute("title","These automating options include things not implemented in the game, so they are considered cheating. Use your conscience, you have been warned ;)");\n\
			cheatingSetting.innerText = "Cheating OFF";\n\
			cheatingSetting.setAttribute("onclick", "toggleCheating();");\n\
			settingsCheat.append(cheatingSetting);\n\
			\n\
			container.append(settingsFormat);\n\
			container.append(settingsCheat);\n\
			\n\
			prestiges = document.createElement("div");\n\
			prestiges.setAttribute("id","qol-prestige");\n\
			prestiges.setAttribute("style", "overflow:auto; height:18vw; text-align: right;");\n\
\n\
			var divlog = document.createElement("div");\n\
			divlog.setAttribute("id","qol-logs");\n\
			divlog.setAttribute("style", "overflow:auto; width:60vw; height: 18vw; bottom: 0vw; right: 0; position: fixed; text-align: center; display:none;");\n\
			container.append(divlog);\n\
		}\n\
		\n\
		savePreferences();\n\
		prestiges.innerHTML = null;\n\
		for (let i = 0; i < prestigePoints.length; i++) {\n\
			var p = document.createElement("p");\n\
			p.setAttribute("id", "p-l" + (i+1));\n\
			p.setAttribute("class", "combat-log-record");\n\
			p.setAttribute("style", "display: block");\n\
			\n\
			var span = document.createElement("span");\n\
			span.setAttribute("id", "l-" + (i+1));\n\
			span.innerHTML = "<b>Layer " + (i+1) + "</b> stats: ";\n\
			p.append(span);\n\
			\n\
			var span2 = document.createElement("span");\n\
			span2.setAttribute("id", "l-" + (i+1) + "-stats");\n\
			span2.style.display = "inline-block";\n\
			span2.innerText = " ";\n\
			p.append(span2);\n\
			\n\
			var button = document.createElement("div");\n\
			button.setAttribute("id", "l" + (i+1) + "-button");\n\
			button.setAttribute("class","button prestige-menu-button");\n\
			button.setAttribute("style", "text-align:center; padding-bottom: 1px;padding-top: 1px;padding-right: 2px;padding-left: 2px;margin: 0;margin-left: 5px;display: inline-block;");\n\
			\n\
			button.setAttribute("onclick", "prestigeCustom(" + i + ");");\n\
			p.append(button);\n\
			\n\
			var cb = document.createElement("input");\n\
			cb.setAttribute("type", "checkbox");\n\
			cb.setAttribute("id", "cb-l" + i);\n\
			cb.setAttribute("value", "AutoPrestige");\n\
			cb.setAttribute("style", "display:none; width: 1.5vw; height: 1em; vertical-align: middle;");\n\
			var ratio = document.createElement("input");\n\
			ratio.setAttribute("type", "text");\n\
			ratio.setAttribute("id", "ratio-l" + i);\n\
			ratio.setAttribute("value", "0");\n\
			ratio.setAttribute("style", "display:none; width: 5vw;");\n\
			p.append(ratio);\n\
			p.append(cb);\n\
			prestiges.append(p);\n\
		}\n\
		container.append(prestiges);\n\
		loadPreferences();\n\
\n\
		if (__init) {\n\
			var l1 = document.getElementById("ratio-l0");\n\
			if (l1 != undefined) l1.value = "6%";\n\
			var l2 = document.getElementById("ratio-l1");\n\
			if (l2 != undefined) l2.value = "20%";\n\
			var l3 = document.getElementById("ratio-l2");\n\
			if (l3 != undefined) l3.value = "65%";\n\
		}\n\
		\n\
		formatLines();\n\
	}\n\
	drawing = false;\n\
}\n\
\n\
var formats = ["Default", "Layered Exp", "Logarithm", "Force Exponential"];\n\
var format = 0;\n\
var _renderNumber = renderNumber;\n\
var formatValue = function (value) {\n\
	if (!(value instanceof Decimal)) {\n\
		var value = new Decimal(value);\n\
	}\n\
	if (value < 1000) {\n\
		if (Number.isInteger(value.mag))\n\
			return (value).toFixed(0);\n\
		else \n\
			return (value).toFixed(2);\n\
	}\n\
	var mantissa = value.mantissa.toFixed(3);\n\
	var power = value.e;\n\
		\n\
	if (power > 10000) {\n\
		switch (formats[format]) {\n\
			case "Default":\n\
				return _renderNumber(value);\n\
				break;\n\
			case "Layered Exp":\n\
				if (value.layer < 2) {\n\
					return "e" + formatValue(new Decimal(value.e));\n\
				}\n\
				else {\n\
					return "e" + formatValue(value.log10());\n\
				}\n\
				break;\n\
			case "Logarithm":\n\
				return "e".repeat(value.layer+1) + Math.log10(value.mag).toFixed(4);\n\
				break;\n\
		}\n\
	}\n\
	return mantissa + "e" + power;\n\
}\n\
\n\
var bLog = false;\n\
function toggleLog() {\n\
	bLog = !bLog;\n\
	var divlog = document.getElementById("qol-logs");\n\
	var div = document.getElementById("qol-prestige");\n\
	var divbattle = document.getElementById("combat-log");\n\
	div.style.display = bLog?"none":"block";\n\
	divlog.style.display = bLog?"block":"none";\n\
	divbattle.style.visibility = bLog?"hidden":"";\n\
	if (bLog) {\n\
		divlog.scrollTo(0, divlog.scrollHeight);\n\
	}\n\
}\n\
\n\
var bShowAuto = false;\n\
function toggleAuto () {\n\
	bShowAuto = !bShowAuto;\n\
	var set1 = document.getElementById("p-settings-ap");\n\
	set1.innerText = "Auto inputs " + (bShowAuto?"ON":"OFF");\n\
	document.querySelectorAll("[id^=cb],[id^=ratio]").forEach((a)=>{ a.style.display = bShowAuto?"inline":"none";});\n\
}\n\
\n\
function toggleFormat () {\n\
	format = (format+1)%formats.length;\n\
	var l = document.getElementById("p-settings-format");\n\
	l.innerText = "Format: " + formats[format];\n\
}\n\
\n\
var forceFormat = false;\n\
function toggleForceFormat() {\n\
	forceFormat = !forceFormat;\n\
	renderNumber = forceFormat?formatValue:_renderNumber;\n\
	var l = document.getElementById("p-settings-force-format");\n\
	l.innerText = "Force format: " + (forceFormat?"ON":"OFF");\n\
}\n\
\n\
var bCheating = false;\n\
function toggleCheating () {\n\
	bCheating = !bCheating;\n\
	init = init || bCheating;\n\
	bShowAuto = !bCheating;\n\
	toggleAuto();\n\
	var set1 = document.getElementById("p-settings-constraint-button");\n\
	set1.style.display = bCheating?"inline":"none";\n\
	var set1 = document.getElementById("p-settings-constraint-input");\n\
	set1.style.display = bCheating?"inline":"none";\n\
	var set1 = document.getElementById("p-settings-ap");\n\
	set1.style.display = bCheating?"inline":"none";\n\
	\n\
	document.querySelectorAll("[id^=cb]").forEach((a)=>{ a.checked = false;});\n\
	\n\
	var l = document.getElementById("p-settings-cheat");\n\
	l.innerText = "Cheating " + (bCheating?"ON":"OFF");\n\
}\n\
\n\
function isEmpty(obj) {\n\
    for(var key in obj) {\n\
        if(obj.hasOwnProperty(key))\n\
            return false;\n\
    }\n\
    return true;\n\
}\n\
\n\
var preferences = [];\n\
function savePreferences() {\n\
	preferences = [];\n\
	preferences.ratios = Array.from(document.querySelectorAll("[id^=ratio]")).map((a)=>a.value);\n\
	preferences.checkboxes = Array.from(document.querySelectorAll("[id^=cb]")).map((a)=>a.checked);\n\
}\n\
\n\
function loadPreferences() {\n\
	if (!isEmpty(preferences)) {\n\
		document.querySelectorAll("[id^=cb],[id^=ratio]").forEach((a)=>{ a.style.display = bShowAuto?"inline":"none";});\n\
		document.querySelectorAll("[id^=ratio]").forEach((a,b)=>{ a.value = preferences.ratios[b] || 0;});\n\
		document.querySelectorAll("[id^=cb]").forEach((a,b)=>{ a.checked = preferences.checkboxes[b] || false;});\n\
	}\n\
}\n\
\n\
function formatLines() {\n\
	document.querySelectorAll("[id^=l-][id$=stats]").forEach((a)=>{ a.style.width="";});\n\
	var statsLength = Math.max.apply(Math, Array.from(document.querySelectorAll("[id^=l-][id$=stats]")).map((a)=>{return a.clientWidth;})) + 1;\n\
	document.querySelectorAll("[id^=l-][id$=stats]").forEach((a)=>{ a.style.width=statsLength;});\n\
	\n\
	document.querySelectorAll("[id^=l][id$=button]").forEach((a)=>{ a.style.width="";});\n\
	var statsLength = Math.max.apply(Math, Array.from(document.querySelectorAll("[id^=l][id$=button]")).map((a)=>{return a.clientWidth;})) + 1;\n\
	document.querySelectorAll("[id^=l][id$=button]").forEach((a)=>{ a.style.width=statsLength;});\n\
	\n\
	var screen = document.getElementById("battlefield-screen");\n\
	var combatlog = document.getElementById("combat-log");\n\
	var layerdiv = document.getElementById("qol-container");\n\
	if (bLog) {\n\
		combatlog.style.width = "48vw";\n\
	} else {\n\
		combatlog.style.width = screen.clientWidth-layerdiv.clientWidth-20;\n\
	}\n\
}\n\
\n\
var prevmult = [];\n\
\n\
var prevfloor = game.floor.mag;\n\
var _prevfloor = game.floor.mag;\n\
function isDead() {\n\
	return game.heroes.filter((a)=>{return a.currentHealth.cmp(0)>0}).length==0;\n\
}\n\
\n\
function floorChanged() {\n\
	if (prevfloor != 0) {\n\
		_prevfloor = prevfloor;\n\
	}\n\
	\n\
	if (isDead()) {\n\
		prevfloor = 0;\n\
		_prevfloor = 1;\n\
	} else {\n\
		prevfloor = _prevfloor;\n\
	}\n\
\n\
	return prevfloor != 0 && game.floor.mag > prevfloor;\n\
}\n\
\n\
function checkAuto(i) {\n\
	var auto = document.getElementById("cb-l" + i);\n\
	if (auto != undefined) {\n\
		return auto.checked;\n\
	}\n\
	return false;\n\
}\n\
\n\
var constraintValue = 1.05;\n\
function checkConstraint(cur, mult, i) {\n\
	if (prevmult[i].layer < 2 && prevmult[i].e < 5) {\n\
		var autoat = prevmult[i].multiply(constraintValue);\n\
	} else {\n\
		var autoat = prevmult[i].pow(constraintValue);\n\
	}\n\
	\n\
	return mult.cmp(autoat) < 0 && prevmult[i].cmp(1) > 0 && mult.cmp(1) > 0;\n\
}\n\
\n\
var thresholdPercent = false;\n\
function getMultiThreshold(i) {\n\
	var ratioval = new Decimal(0);\n\
	var auto = document.getElementById("cb-l" + i);\n\
	if (auto != undefined) {\n\
		var ratio = document.getElementById("ratio-l" + i);\n\
		if (ratio != undefined) {\n\
			var ratiotext = ratio.value;\n\
			if (ratiotext != "0") {\n\
				if (ratiotext.includes("%")) {\n\
					thresholdPercent = true;\n\
					ratioval = new Decimal(ratiotext).div(100);\n\
				} else {\n\
					thresholdPercent = false;\n\
					ratioval = new Decimal(ratiotext);\n\
				}\n\
			}\n\
		}\n\
	}\n\
	return new Decimal(ratioval);\n\
}\n\
\n\
function checkMultiThreshold(cur, mult, i) {\n\
	var canPrestige = false;\n\
	var ecur = cur.mag;\n\
	var emult = mult.mag;\n\
	var ratioval = getMultiThreshold(i);\n\
	var minprestige = new Decimal(0);\n\
	if (ratioval.cmp(0) > 0) {\n\
		if (thresholdPercent) {\n\
			if (cur.layer < 2 && cur.e < 5) {\n\
				var autoat = cur.multiply(ratioval);\n\
			} else {\n\
				var autoat = cur.pow(ratioval);\n\
			}\n\
			minprestige = autoat;\n\
			if (mult.cmp(autoat) > 0) {\n\
				canPrestige = true;\n\
			}\n\
		} else {\n\
			minprestige = ratioval;\n\
			if (mult.cmp(ratioval) > 0) {\n\
				canPrestige = true;\n\
			}\n\
		}\n\
	}\n\
	var maxprestige = new Decimal(0);\n\
	if (prevmult[i].layer < 2 && prevmult[i].e < 5) {\n\
		maxprestige = prevmult[i].multiply(constraintValue);\n\
	} else {\n\
		maxprestige = prevmult[i].pow(constraintValue);\n\
	}\n\
	var tooltip;\n\
	if (checkAuto(i)) {\n\
		tooltip = "Next check at " + (i==0?"floor change":("layer " + i + " prestige"));\n\
	} else {\n\
		tooltip = "Disabled";\n\
	}\n\
	tooltip += "\\nMulti Threshold: " + formatValue(minprestige);\n\
	if (maxprestige.cmp(minprestige) > 0) {\n\
		tooltip += "\\n" + "Constraint Threshold: " + formatValue(maxprestige);\n\
	} else {\n\
		tooltip += "\\nWaiting to reach multi threshold...";\n\
	}\n\
	\n\
	setButtonTitle(i, tooltip);\n\
	return canPrestige;\n\
}\n\
\n\
function checkEnemiesDifficulty() {\n\
	var heroDamage;\n\
	if (game.heroes.length > 0) {\n\
		var heroesMap = game.heroes.map((a) => {return getHeroDamage(a);});\n\
		heroDamage = heroesMap.reduce((a,b) => (a.cmp(b)>0?a:b));\n\
	}\n\
	var enemyHealth;\n\
	if (game.enemies.length > 0) {\n\
		enemyHealth = game.enemies[0].maxHealth.multiply(2);\n\
	}\n\
	return heroDamage != null && enemyHealth != null && heroDamage.cmp(enemyHealth) < 0;\n\
}\n\
\n\
function setButtonText(i, text) {\n\
	document.getElementById("l" + (i+1) + "-button").innerText = "Prestige for " + text + "x";\n\
}\n\
\n\
function setButtonTitle(i, title) {\n\
	document.getElementById("l" + (i+1) + "-button").setAttribute("title", title);\n\
}\n\
\n\
function setStatsText(i, text) {\n\
	document.getElementById("l-" + (i+1) + "-stats").innerText = text + "x";\n\
}\n\
\n\
function setTotalsText(text) {\n\
	document.getElementById("l-totals-stats").innerText = text + "x";\n\
}\n\
\n\
function setConstraintText() {\n\
	var constraintInput = document.getElementById("p-settings-constraint-input");\n\
	if (constraintInput != undefined) {\n\
		var constraintText = constraintInput.value;\n\
		constraintValue = Number.parseInt(constraintText)/100+1;\n\
		var l = document.getElementById("p-settings-constraint-button");\n\
		l.setAttribute("title", "Each layer will store its new calculated multiplier on prestiging previous layer (on floor change for layer 1).\\nIf difference between new multiplier and stored values is less than " + formatValue(constraintValue*100-100) + "%, it will auto-prestige.\\nFor high numbers percentage is applied to exponents.\\nWhen you reach floor where you cannot kill enemies, it will auto-prestige layer 1, triggering the threshold check chain");\n\
	}\n\
	var prestigePoints = getAvailablePrestigePoints();\n\
}\n\
\n\
if (sInterval != undefined) {\n\
	clearInterval(sInterval);\n\
}\n\
\n\
function clearPrevMults(n) {\n\
	for (let i = n; i >= 0; i--) {\n\
		prevmult[i] = new Decimal(1);\n\
	}\n\
}\n\
\n\
function getMult(i) {\n\
	var mult = new Decimal(1);\n\
	prestigePoints = getAvailablePrestigePoints();\n\
	if (game.prestige != undefined) {\n\
		if (game.prestige[i] != undefined) {\n\
			mult = new Decimal(1);\n\
			var pstats = game.prestige[i][1];\n\
			var upgradePoints = getPrestigePointsFromStatUpgrades(pstats);\n\
			upgradePoints = upgradePoints.plus(prestigePoints[i]\n\
					.divideBy(5)\n\
					.floor());\n\
			if (getStatUpgradesFromPrestigePoints(upgradePoints).cmp(getStatUpgradesFromPrestigePoints(pstats.add(1)))>=0) {\n\
				mult = getStatUpgradesFromPrestigePoints(upgradePoints)\n\
					.plus(1)\n\
					.divideBy(pstats.plus(1));\n\
			}\n\
		} else {\n\
			mult = new Decimal(i==0?1:i);\n\
			var upgradePoints = new Decimal(0);\n\
			upgradePoints = upgradePoints.plus(prestigePoints[i]\n\
					.divideBy(5)\n\
					.floor());\n\
			if (upgradePoints.cmp(0) > 0) {\n\
				mult = mult.multiply(getStatUpgradesFromPrestigePoints(upgradePoints).plus(1));\n\
			}\n\
		}\n\
	}\n\
	return mult;\n\
}\n\
\n\
function getCur(i) {\n\
	var cur = new Decimal(1);\n\
	if (game.prestige != undefined && game.prestige[i] != undefined) {\n\
		cur = game.prestige[i][1].plus(1).multiply(i>0?i:1);\n\
	}\n\
	return cur;\n\
}\n\
\n\
_init();\n\
var init = true;\n\
var sInterval = setInterval(function() {\n\
	setConstraintText();\n\
	redraw();\n\
	prestigePoints = getAvailablePrestigePoints();\n\
	\n\
	var curvals = [];\n\
	var multvals = [];\n\
	for (var i = 0; i < prestigePoints.length; i++) {\n\
		\n\
		curvals[i] = getCur(i);\n\
		setStatsText(i, formatValue(curvals[i]));\n\
		multvals[i] = getMult(i);\n\
		setButtonText(i, formatValue(multvals[i]));\n\
		\n\
		if (typeof game.prestige !== "undefined") {\n\
			setTotalsText(formatValue(game.prestige.reduce((a,b,c)=>a.multiply(b[1].add(1).multiply(c>0?c:1)), new Decimal(1))));\n\
		} else {\n\
			setTotalsText(1);\n\
		}\n\
\n\
		if (init) {\n\
			if (prevmult[i] == undefined) {\n\
				prevmult[i] = multvals[i];\n\
			}\n\
		}\n\
	}\n\
	init = false;\n\
\n\
	var isFloorChanged = floorChanged();\n\
	var canPrestige = [];\n\
	if (isFloorChanged) {\n\
		var reachedEnd = checkEnemiesDifficulty();\n\
		for (let i = 0; i < prestigePoints.length; i++) {\n\
			if (prevmult[i] == undefined) {\n\
				prevmult[i] = new Decimal(1);\n\
			}\n\
			\n\
			canPrestige[i] = checkMultiThreshold(curvals[i], multvals[i], i) && checkConstraint(curvals[i], multvals[i], i);\n\
		}\n\
		var prestigeLayer = -1;\n\
		for (let i = 0; i < prestigePoints.length; i++) {\n\
			if (!checkAuto(i)) {\n\
				break;\n\
			}\n\
			if (i == 0 && reachedEnd) {\n\
				canPrestige[i] = true;\n\
			}\n\
			if (canPrestige[i]) {\n\
				prestigeLayer = i;\n\
				checkMultiThreshold(curvals[1], multvals[1], 1);\n\
				checkConstraint(curvals[1], multvals[1], 1);\n\
			} else {\n\
				break;\n\
			}\n\
		}\n\
		\n\
		if (prestigeLayer >= 0) {\n\
			prevfloor = 0;\n\
			prestigeCustom(prestigeLayer);\n\
		} else {\n\
			prevmult[0] = multvals[0];\n\
			checkStatUpgrades(prestigePoints.length - 1, 14);\n\
		}\n\
		\n\
		prevfloor = game.floor.mag;\n\
	}\n\
	formatLines();\n\
}, 200);';